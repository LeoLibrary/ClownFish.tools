-----------------------------------------
ClownFish.PreheatWebSite 工具能解决什么问题？
-----------------------------------------
1、网站第一次访问过慢的问题。
   典型现象是：用户一直反馈ERP网站第一次访问比较慢。
   问题分析：当网站收到第一个请求时，要执行大量的初始化工作，例如，
   创建IIS工作进程，加载.net framework，加载ASP.NET，编译网站（部分编译），执行平台初始化代码（各类初始化及校验），
   因此这个过程比较复杂，需要等待的时间较长，且难以优化，
   不过，这个过程只需要执行一次，直到网站进程被IIS回收。

2、页面第一次访问过慢的问题（给客户做演示时）
   典型现象是：ERP操作过程中，突然打开【另一个没有操作过的页面】，明显感觉较慢，但是第二次访问时又变快了。
   问题分析：为了优化页面打开速度，页面会在第一次访问时被编译（系统行为），所以需要等待编译结束，
   这个过程也比较复杂，由微软的底层系统实现，难以优化，
   不过，这个过程只需要执行一次，直到网站进程被IIS回收。


这二类问题有一个共性点：只是第一次访问慢，后续就不会发生，
技术上的说法是是：冷启动。
所以，为了解决这二类问题，工具可以一次性批量请求页面，达到预热效果。



-----------------------------------------
ClownFish.PreheatWebSite 的解决方案
-----------------------------------------
1、网站第一次访问过慢的问题。
   解决方案：结合定时任务，提前运行工具，让用户避开网站的冷启动过程，
   例如：客户如果是 9 点上班，可以设置一个定时任务，在 8:40 启动本工具（甚至可配置为每半小时执行一次），
   命令行格式：ClownFish.PreheatWebSite.exe  "test1.preheat.script"

2、页面第一次访问过慢的问题（给客户做演示时）
   解决方案：在演示前，直接运行本工具，将需要演示的页面全部访问一遍，避免在演示过程中等待页面的编译过程。




-----------------------------------------
谁来创建 ClownFish.PreheatWebSite 脚本？
-----------------------------------------
建议由开发同事创建 ClownFish.PreheatWebSite 脚本，创建过程可参考《如何创建预热脚本文件.docx》




-----------------------------------------
ClownFish.PreheatWebSite 定时运行
-----------------------------------------
为了方便地支持定时任务，ClownFish.PreheatWebSite可支持命令行的调用方式，
具体定时任务的设置请参考《设置PreheatWebSite的定时任务.docx》










